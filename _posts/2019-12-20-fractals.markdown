---
layout: default
modal-id: 3
title: Fractals
date: 2019-12-20
img: julia-fractal.png
alt: Image of a Julia Set fractal for the Mandelbrot set
project-date: December 2019
category: Personal Project
description: |
    A program originally created in Kotlin that generates images of the Mandelbrot set and Julia sets for the mandelbrot set. 

    The mandelbrot set is generated by iterating the function \\(f_c = z^2 + c\\) on itself starting from \\(z=0\\) and plotting the results created with different values of \\(c\\) in the complex plane. If the value of the function from \\(c\\) does not diverge to infinity (stays finite) after an infinite number of iterations, then \\(c\\) is in the mandelbrot set.

    The images of the Mandelbrot set are created by running a large number (\\(10000\\)) of iterations for each pixel. If the value's magnitude is less than \\(2\\) for the entire \\(10000\\) iterations, then the pixel is colored black and considered in the Mandelbrot set. If the value has a greater magnitude than \\(2\\) after any iteration, then it is guarenteed to eventually diverge to infinity. The pixels that diverge are colored based on how many iterations it takes to know that it diverges. To make the program run faster, big cardioid and the three main bulbs in the Mandelbrot set are skipped and the values for \\(c = a + bi\\) are mirrored to \\(a - bi\\).

    A Julia set for the Mandelbrot set is the boundaries between the diverging and non-diverging regions when the function \\(f_c = z^2 + c\\) is iterated with a fixed \\(c\\) and changing \\(z\\).
    The program generates the images in the same way as for the Mandelbrot set except the values for the pixels are mirrored differently and no values are skipped.

    The images are currently generated by running all iterations of each pixel before moving on to the next pixel. This means it takes a significant amount of time for an image to show up when running the program with a large number of iterations. It would probably be better to run one iteration for every pixel in the image before running the next iteration so an image appears almost immediately and is refined over time.

    The inspiration for making this program was from the video [What's so special about the Mandelbrot Set? - Numberphile](https://www.youtube.com/watch?v=FFftmWSzgmk).
---
